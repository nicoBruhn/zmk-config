#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    input_configs {
        compatible = "zmk,input-configs";

        mmv {
            device = <&mmv>;
            scale-multiplier = <10>;
        };
    };

    behaviors {
        kpml: key_press_moment_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "layer_moment_press_key";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_macro: hold_macro {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_MACRO";
            bindings = <&special_key>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        sticky_key_quick_release: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
    };

    macros {
        special_key: special_key {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp LEFT_SHIFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>;

            label = "SPECIAL_KEY";
        };
    };

    combos {
        compatible = "zmk,combos";

        mouse_layer {
            bindings = <&mo 6>;
            key-positions = <31 32>;
        };

        media_layer {
            bindings = <&mo 5>;
            key-positions = <30 33>;
        };

        boot_mode_right {
            bindings = <&bootloader>;
            key-positions = <5 9 6 7 8>;
        };

        boot_mode_left {
            bindings = <&bootloader>;
            key-positions = <0 1 2 3 4>;
        };

        reset_bt {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <0 1 2 7 8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q            &kp W  &hold_macro E E  &kp R           &kp T            &kp Y        &kp U          &kp I      &hold_macro O O  &kp P
&hold_macro A A  &kp S  &kp D            &kp F           &kp G            &kp H        &kp J          &kp K      &kp L            &kp SEMI
&kp Z            &kp X  &kp C            &kp V           &kp B            &kp N        &kp M          &kp COMMA  &kp DOT          &kp FSLH
                                         &kpml 4 ESCAPE  &kpml 1 SPACE    &kpml 2 TAB  &kpml 3 ENTER
            >;
        };

        symbol_layer_1 {
            bindings = <
&kp RS(GRAVE)  &kp EXCLAMATION  &kp POUND      &kp QUESTION  &trans           &trans                &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp LEFT_BRACE     &kp RIGHT_BRACE
&kp CARET      &kp SLASH        &kp BACKSLASH  &kp PIPE      &kp AMPERSAND    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES  &kp UNDERSCORE
&trans         &trans           &trans         &trans        &trans           &trans                &trans                 &trans             &trans             &trans
                                               &trans        &trans           &trans                &trans
            >;
        };

        symbol_layer_2 {
            bindings = <
&trans                              &kp AT_SIGN                           &trans                                  &kp DOLLAR                          &trans    &trans     &trans  &trans  &trans  &trans
&sticky_key_quick_release LEFT_ALT  &sticky_key_quick_release LEFT_SHIFT  &trans                                  &sticky_key_quick_release LEFT_WIN  &trans    &kp COLON  &trans  &trans  &trans  &trans
&trans                              &trans                                &sticky_key_quick_release LEFT_CONTROL  &trans                              &trans    &trans     &trans  &trans  &trans  &trans
                                                                                                                  &trans                              &trans    &trans     &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &trans    &trans        &kp LESS_THAN  &kp GREATER_THAN  &kp TILDE  &trans
&trans  &kp N4  &kp N5  &kp N6  &kp N0    &kp ASTERISK  &kp PLUS       &kp MINUS         &kp EQUAL  &kp PERCENT
&trans  &kp N1  &kp N2  &kp N3  &trans    &trans        &trans         &trans            &trans     &trans
                        &trans  &trans    &trans        &trans
            >;
        };

        special_layer {
            bindings = <
&trans        &trans          &trans            &trans        &trans    &kp K_COPY      &kp K_UNDO  &trans        &trans     &kp K_PASTE
&kp LEFT_ALT  &kp LEFT_SHIFT  &kp BACKSPACE     &kp LEFT_WIN  &trans    &kp LEFT_ARROW  &kp DOWN    &kp UP_ARROW  &kp RIGHT  &trans
&trans        &kp DEL         &kp LEFT_CONTROL  &trans        &trans    &trans          &trans      &trans        &trans     &trans
                                                &trans        &trans    &trans          &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &trans    &kp F10            &kp F11          &kp F12     &trans  &kp PRINTSCREEN
&trans  &kp F4  &kp F5  &kp F6  &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &trans    &trans             &trans           &trans      &trans  &trans
                        &trans  &trans    &trans             &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans        &trans          &msc SCRL_DOWN  &msc SCRL_UP  &trans    &trans          &trans          &trans        &trans           &trans
&kp LEFT_ALT  &kp LEFT_SHIFT  &mkp LCLK       &mkp RCLK     &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans        &trans          &kp LCTRL       &trans        &trans    &trans          &trans          &trans        &trans           &trans
                                              &trans        &trans    &trans          &trans
            >;
        };
    };
};

